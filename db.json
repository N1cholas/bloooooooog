{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/hux-blog.css","path":"css/hux-blog.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"source/img/home-bg.jpg","path":"img/home-bg.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/huxblog/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1610265616991},{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1610265616978},{"_id":"themes/huxblog/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1610265616991},{"_id":"themes/huxblog/_config.yml","hash":"5d235aa7716657282795ee86d9c9db2374197a66","modified":1610265616991},{"_id":"source/_posts/hello-2015.markdown","hash":"999910c6056e2f2d680e668fac2621db196cf7c0","modified":1610265616978},{"_id":"source/_posts/js-module-7day.markdown","hash":"e2ad67488d6e38c6844a7203f8c89918847c221f","modified":1610265616980},{"_id":"source/_posts/js-module-loader.markdown","hash":"a9bb15f756fed8464a52a5f7131336b27715a34d","modified":1610265616980},{"_id":"source/_posts/js-version.markdown","hash":"325424f7d638c817164b8e977ba2ef2b18876444","modified":1610265616981},{"_id":"source/_posts/unix-linux-note.markdown","hash":"4f9eefe870a1291f469eef2b2603357c3f1da924","modified":1610265616983},{"_id":"source/about/index.md","hash":"d71a7fe37129f13eb60c43b796dbc42652a95160","modified":1610289406903},{"_id":"source/archives/index.md","hash":"15f6a9b6874b7e71a90fde7ea5f9511845628217","modified":1610289406928},{"_id":"source/img/favicon.ico","hash":"e5456356f937566355ff402cff045f26d10f4ad9","modified":1610290733410},{"_id":"source/img/avatar.jpg","hash":"863ca40225799ce2d2fa18e9d2ca06a58ba45df9","modified":1610287040622},{"_id":"source/img/icon_wechat.png","hash":"7fdb00c9017236e05c1b3e6da38a2cc382fd69fa","modified":1610265616990},{"_id":"source/tags/index.md","hash":"1f83bad2b9e2cddb44b2e31fbae032dffb9134f3","modified":1610289406926},{"_id":"themes/huxblog/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1610265616992},{"_id":"themes/huxblog/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1610265616993},{"_id":"themes/huxblog/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1610265616993},{"_id":"themes/huxblog/layout/about.ejs","hash":"7f56c71383ef6c156b56d79b3984e07cc466606a","modified":1610265616994},{"_id":"themes/huxblog/layout/archive.ejs","hash":"6c3ed5d914379319efe835a4aa505abbc616c328","modified":1610265616994},{"_id":"themes/huxblog/layout/archives.ejs","hash":"f0046e58cc1dd876133be2bf927aed2b1821cb3e","modified":1610265616994},{"_id":"themes/huxblog/layout/index.ejs","hash":"70ac58c46625300a70791e210daf446afa6d1cd4","modified":1610265616994},{"_id":"themes/huxblog/layout/keynote.ejs","hash":"f5689862281e34dbe8402b0e72f632902e53e88b","modified":1610265616994},{"_id":"themes/huxblog/layout/layout.ejs","hash":"6525eaba5941d9f17a68ab64311f4c812aa8dbef","modified":1610289443238},{"_id":"themes/huxblog/layout/page.ejs","hash":"3fde0787e883274563f9de5aaeb8130b667e132a","modified":1610265616995},{"_id":"themes/huxblog/layout/post.ejs","hash":"fd68124c3de2bbe7d870cecadcf684df7cf82519","modified":1610265616995},{"_id":"themes/huxblog/layout/tags.ejs","hash":"a51bf2828af20939d702de1fdae067439a1153c0","modified":1610265616995},{"_id":"source/img/tag-bg.jpg","hash":"8844274a812ae19e8f2a3b7e4e465342e63eb852","modified":1610265616991},{"_id":"source/_posts/js-version/keep-calm-and-learn-javascript.png","hash":"49ea101b92ce5e136a19e6b11162f8f4126fe01f","modified":1610265616982},{"_id":"source/_posts/js-version/post-bg-js-version.jpg","hash":"1598a1180c491f36b9036415b622bd9e5ad5d3bc","modified":1610265616982},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1610265616985},{"_id":"source/img/home-bg-o.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1610265616989},{"_id":"themes/huxblog/layout/_partial/footer.ejs","hash":"e325a9953abc1a3751aa1a927bc3ecbdd627803a","modified":1610265616993},{"_id":"themes/huxblog/layout/_partial/head.ejs","hash":"87c544a64ea49b835330135a616deb2e9fd39bbb","modified":1610265616993},{"_id":"themes/huxblog/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1610265616993},{"_id":"themes/huxblog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1610265616993},{"_id":"themes/huxblog/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1610265616996},{"_id":"themes/huxblog/source/css/hux-blog.css","hash":"c1b0a32ad8075ac09d99fb4d64a9fbc84163abf8","modified":1610265616996},{"_id":"themes/huxblog/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1610265616997},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1610265616999},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1610265616998},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1610265616998},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1610265616997},{"_id":"themes/huxblog/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1610265616999},{"_id":"themes/huxblog/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1610265616999},{"_id":"themes/huxblog/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1610265617000},{"_id":"themes/huxblog/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1610265617001},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1610265617002},{"_id":"source/_posts/js-module-loader/post-bg-js-module.jpg","hash":"4a43bfa6b69c79a6ef90bd852fe5756d241733cd","modified":1610265616981},{"_id":"source/_posts/js-version/javascript-java.jpg","hash":"881e35e241a8be40f3c4e3a6f57d5402247c1eb3","modified":1610265616982},{"_id":"source/_posts/unix-linux-note/post-bg-unix-linux.jpg","hash":"e8f3739cb78ea6d1645665d07ebdb79881774fb6","modified":1610265616983},{"_id":"source/img/home-bg.jpg","hash":"8844274a812ae19e8f2a3b7e4e465342e63eb852","modified":1610265616991},{"_id":"themes/huxblog/source/css/bootstrap.min.css","hash":"973e37a8502921d56bc02bb55321f45b072b6f71","modified":1610265616996},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1610265616998},{"_id":"themes/huxblog/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1610265616999},{"_id":"themes/huxblog/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1610265617001},{"_id":"themes/huxblog/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1610265616996},{"_id":"source/_posts/hello-2015/post-bg-2015.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1610265616980},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1610265616988},{"_id":"themes/huxblog/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1610265617001},{"_id":"source/img/about-bg.jpg","hash":"b5814b2d10eb38dfda0072365567f3823bc34aba","modified":1610265616986},{"_id":"source/_posts/fp-learning.md","hash":"fa79d7512b1f1a495c1a2ccec34635117c77d00c","modified":1590743482129},{"_id":"source/_posts/.DS_Store","hash":"9a65d125c2a44429d63806b40f83b169070ced6c","modified":1610362249500},{"_id":"public/404.html","hash":"7966007e7d7418458ced1d18bbc29d95449425d0","modified":1610293445763},{"_id":"public/archives/index.html","hash":"71480525eda697488a382eeea2c8336e5838a7ad","modified":1610363036214},{"_id":"public/i_dont_wanna_use_default_archives/index.html","hash":"b721e5b7e42947c037dcfaad774ea681bc4b07ae","modified":1610293445763},{"_id":"public/i_dont_wanna_use_default_archives/2013/index.html","hash":"92894e5fdfe496da17dee69cae8a28a9eeebefdb","modified":1610273517143},{"_id":"public/i_dont_wanna_use_default_archives/2013/05/index.html","hash":"2c0adceb8142e7821b141faa61fbcb391050cc37","modified":1610273517143},{"_id":"public/i_dont_wanna_use_default_archives/2014/index.html","hash":"a97853313fe0401b51a54b55079f6d28eeaacfe7","modified":1610273517143},{"_id":"public/i_dont_wanna_use_default_archives/2014/01/index.html","hash":"eff686ba16c227647c21688e2184ba57b3ec99aa","modified":1610273517143},{"_id":"public/i_dont_wanna_use_default_archives/2014/09/index.html","hash":"7376c240da6bac5aa3a0f3f7c5ef147c8e1b895e","modified":1610273517143},{"_id":"public/i_dont_wanna_use_default_archives/2015/index.html","hash":"3b331c76aaff2eb25c99dc22ec36863744c7ecac","modified":1610273517143},{"_id":"public/i_dont_wanna_use_default_archives/2015/04/index.html","hash":"4999a5cd7fd6d7e14d2db6ddf087bbd751296488","modified":1610273517143},{"_id":"public/i_dont_wanna_use_default_archives/2015/07/index.html","hash":"739e79e173440a681311acdbc7fd0a1422c9f5be","modified":1610273517143},{"_id":"public/tags/生活/index.html","hash":"174cf78373f0ccbf108c685b4dffc26737be2635","modified":1610273517143},{"_id":"public/tags/前端开发/index.html","hash":"a33093e6a5f7637f0c4484f4090145f41dca3a77","modified":1610273517143},{"_id":"public/tags/JavaScript/index.html","hash":"c767e1d19e867022982b4b2b3be91a4996564b7e","modified":1610273517143},{"_id":"public/tags/翻译/index.html","hash":"8495fcfe5509bfdca91480d5c2b6b0d8c92a1f5a","modified":1610273517143},{"_id":"public/tags/OS/index.html","hash":"dc1e00150706a4f02f162bc44d074ea43db4519c","modified":1610273517143},{"_id":"public/tags/Unix/index.html","hash":"4583b733bf63e2bf39d9773c1b288a4bc868742b","modified":1610273517143},{"_id":"public/tags/Linux/index.html","hash":"e374ebaeb5cc5571b6e0b4d63d3b35cd449406b6","modified":1610273517143},{"_id":"public/about/index.html","hash":"622e751a81c121af2e6da14f831bf811d8ee4ae0","modified":1610363036214},{"_id":"public/tags/index.html","hash":"5c8b7b73091b745b738f0d081fa3a6550400b7f9","modified":1610363036214},{"_id":"public/2015/07/09/js-module-7day/index.html","hash":"81bbb003dc5b7fa9e24c6e0730ea116db0665cf3","modified":1610273517143},{"_id":"public/2015/04/14/unix-linux-note/index.html","hash":"7a82d236a82df5047d031a541f00eccd0b57198c","modified":1610273517143},{"_id":"public/2014/09/22/js-version/index.html","hash":"13ee3614402b1a196da3056dbfe5b0bfc0f1049e","modified":1610273517143},{"_id":"public/2014/01/29/hello-2015/index.html","hash":"4d3594d020da705f3c70fac9ff746cfa01ac373a","modified":1610273517143},{"_id":"public/2013/05/25/js-module-loader/index.html","hash":"647a969806caed159acfa511deaaac4ed91c48a0","modified":1610273517143},{"_id":"public/index.html","hash":"fcfe98807cc20dd1d5b4066a7ea4b60773c35bdc","modified":1610363036214},{"_id":"public/img/favicon.ico","hash":"e5456356f937566355ff402cff045f26d10f4ad9","modified":1610293445763},{"_id":"public/img/avatar.jpg","hash":"863ca40225799ce2d2fa18e9d2ca06a58ba45df9","modified":1610293445763},{"_id":"public/img/icon_wechat.png","hash":"7fdb00c9017236e05c1b3e6da38a2cc382fd69fa","modified":1610273517143},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1610293445763},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1610293445763},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1610293445763},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1610293445763},{"_id":"public/2014/09/22/js-version/post-bg-js-version.jpg","hash":"1598a1180c491f36b9036415b622bd9e5ad5d3bc","modified":1610273517143},{"_id":"public/2014/09/22/js-version/keep-calm-and-learn-javascript.png","hash":"49ea101b92ce5e136a19e6b11162f8f4126fe01f","modified":1610273517143},{"_id":"public/img/tag-bg.jpg","hash":"8844274a812ae19e8f2a3b7e4e465342e63eb852","modified":1610273517143},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1610293445763},{"_id":"public/2013/05/25/js-module-loader/post-bg-js-module.jpg","hash":"4a43bfa6b69c79a6ef90bd852fe5756d241733cd","modified":1610273517143},{"_id":"public/2014/09/22/js-version/javascript-java.jpg","hash":"881e35e241a8be40f3c4e3a6f57d5402247c1eb3","modified":1610273517143},{"_id":"public/2015/04/14/unix-linux-note/post-bg-unix-linux.jpg","hash":"e8f3739cb78ea6d1645665d07ebdb79881774fb6","modified":1610273517143},{"_id":"public/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1610293445763},{"_id":"public/img/home-bg-o.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1610273517143},{"_id":"public/css/highlight.css","hash":"8bc5e670b028eda8097f58bdc85269c5124c2951","modified":1610293445763},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1610293445763},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1610293445763},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1610293445763},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1610293445763},{"_id":"public/css/hux-blog.css","hash":"c1b0a32ad8075ac09d99fb4d64a9fbc84163abf8","modified":1610293445763},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1610293445763},{"_id":"public/2014/01/29/hello-2015/post-bg-2015.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1610273517143},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1610293445763},{"_id":"public/img/home-bg.jpg","hash":"8844274a812ae19e8f2a3b7e4e465342e63eb852","modified":1610293445763},{"_id":"public/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1610273517143},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1610293445763},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1610293445763},{"_id":"public/css/bootstrap.min.css","hash":"973e37a8502921d56bc02bb55321f45b072b6f71","modified":1610293445763},{"_id":"public/img/about-bg.jpg","hash":"b5814b2d10eb38dfda0072365567f3823bc34aba","modified":1610273517143},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1610293445763},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1610293445763},{"_id":"source/_posts/hello-bolg.md","hash":"2dc6dc072bf2d3ad0499f3c15b95de7631db28cf","modified":1610286874534},{"_id":"source/.DS_Store","hash":"247694708698251f71e9886ce5a5aa82c2b3442f","modified":1610273935901},{"_id":"source/_posts/hello-bolg/post-bg-2015.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1610265616980},{"_id":"source/_posts/hello-bolg/post-bg.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1610265616980},{"_id":"source/_posts/hello-bolg/.DS_Store","hash":"838245ba29be53ace9334804642bab63238ab17d","modified":1610274831344},{"_id":"source/img/home-bg.jpeg","hash":"202ba942cfbf3e82b0b9b6476997b1d901081525","modified":1610288734984},{"_id":"public/2021/01/10/hello-bolg/index.html","hash":"bbaa91e3810dd1fe8c73060936e8d729b058cd6e","modified":1610363036214},{"_id":"public/i_dont_wanna_use_default_archives/2021/index.html","hash":"7aa1d829736bae77eeca5be3fe949d73b8669cca","modified":1610293445763},{"_id":"public/i_dont_wanna_use_default_archives/2021/01/index.html","hash":"dd471e041421d5b8050bc875d0ca84c93a79dc75","modified":1610293445763},{"_id":"public/tags/计划/index.html","hash":"2c2d265154e037bd7313e314e8477c999c002e35","modified":1610293445763},{"_id":"public/2021/01/10/hello-bolg/post-bg.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1610293445763},{"_id":"source/_posts/webpack.md","hash":"259fd30effeb0e4636f50b21fe7b71f25f60332c","modified":1610362257001},{"_id":"source/_posts/webpack/post-bg.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1610265616980},{"_id":"public/tags/项目工程化/index.html","hash":"a6ddbee34d18ad5cf9cf5164304591da4818bda2","modified":1610363036214},{"_id":"public/2021/01/11/webpack/index.html","hash":"1d8f4dede0f8c9503f31fa97a22a0d48c05cd220","modified":1610363036214},{"_id":"public/2021/01/11/webpack/post-bg.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1610363036214}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2021-01-10T09:25:06.817Z","updated":"2021-01-10T08:00:16.978Z","path":"404.html","title":"","comments":1,"_id":"ckjqxs5to0000f30odf64ijff","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2023-01-10T09:05:52.000Z","description":"Less is more.","comments":1,"_content":"\n\n>想做个前端，但不只是前端\n\n哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2023-01-10 17:05:52\ndescription: \"Less is more.\"\ncomments: true\n---\n\n\n>想做个前端，但不只是前端\n\n哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦\n","updated":"2021-01-10T14:36:46.903Z","path":"about/index.html","_id":"ckjqxs5u40002f30oeq3npswl","content":"<blockquote>\n<p>想做个前端，但不只是前端</p>\n</blockquote>\n<p>哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>想做个前端，但不只是前端</p>\n</blockquote>\n<p>哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦哔哩吧啦</p>\n"},{"layout":"archives","title":"Archives","description":"Less is more.","_content":"","source":"archives/index.md","raw":"---\nlayout: \"archives\"\ntitle: \"Archives\"\ndescription: \"Less is more.\"\n---\n","date":"2021-01-10T14:36:46.928Z","updated":"2021-01-10T14:36:46.928Z","path":"archives/index.html","_id":"ckjqxs5u60004f30ormii17mz","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"Less is more.","_content":"\n","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Less is more.\"\n---\n\n","date":"2021-01-10T14:36:46.926Z","updated":"2021-01-10T14:36:46.926Z","path":"tags/index.html","_id":"ckjqxs5u90007f30oz2n34g0z","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"Welcome to Long's Blog","subtitle":" \"Hello World, Hello Blog\"","date":"2021-01-10T10:06:21.000Z","author":"Long","header-img":"post-bg.jpg","_content":"\n\n## 前言\n\n> 梳理前端知识，总结开发经验，沉淀技术方案\n\n博客清单\n\n- Vue\n- Webpack\n- Node\n- 自动化","source":"_posts/hello-bolg.md","raw":"---\nlayout:     post\ntitle:      \"Welcome to Long's Blog\"\nsubtitle:   \" \\\"Hello World, Hello Blog\\\"\"\ndate:       2021-01-10 18:06:21\nauthor:     \"Long\"\nheader-img: \"post-bg.jpg\"\ntags:\n    - 计划\n---\n\n\n## 前言\n\n> 梳理前端知识，总结开发经验，沉淀技术方案\n\n博客清单\n\n- Vue\n- Webpack\n- Node\n- 自动化","slug":"hello-bolg","published":1,"updated":"2021-01-10T13:54:34.534Z","_id":"ckjqzmek90000s80oh4v3c8ui","comments":1,"photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p>梳理前端知识，总结开发经验，沉淀技术方案</p>\n</blockquote>\n<p>博客清单</p>\n<ul>\n<li>Vue</li>\n<li>Webpack</li>\n<li>Node</li>\n<li>自动化</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p>梳理前端知识，总结开发经验，沉淀技术方案</p>\n</blockquote>\n<p>博客清单</p>\n<ul>\n<li>Vue</li>\n<li>Webpack</li>\n<li>Node</li>\n<li>自动化</li>\n</ul>\n"},{"layout":"post","title":"基于Webpack项目工程化","subtitle":"又是一波整合的配置","date":"2021-01-11T10:47:00.000Z","author":"Long","header-img":"post-bg.jpg","_content":"\n## Webpack\n\n> webpack是一个打包工具，可以打包一切前端相关资源\n\n学习webpack，掌握3个要素\n\n- 理解打包过程\n- 熟悉打包配置\n- 了解webpack生态\n\n比较其他的打包工具👇\n\n[rollup](https://rollupjs.org/guide/en/)：一般用打包JS库，打包单纯的JS用的比较多，打包其他资源需要借助插件\n\n[parcel](https://parceljs.org/)：0配置打包工具\n\n[gulp](https://gulpjs.com/)：基于流的打包工具，逐渐被替代\n\n### 概念\n\n核心配置：\n\n- entry: 打包入口\n- output: 打包输出目录\n\n```js\noutput: {\n  filename: '[name].bundle.[chunkhash].[ext]',\n  // 绝对路径  \n  path: path.resolve(__dirname, 'dist'),\n  // 配置动态加载\n  chunkFilename: '[name].bundle.js'\n}\n```\n\n- module(Loader): 处理各种资源\n\n```js\nmodule: {\n  rules: [\n    {\n      test: /\\.jsx$/,\n      use: [\n        {\n          loader: 'babel-loader',\n          options: {\n            // 支持解析jsx以及tsx\n            presets: [\"@babel/preset-react\", \"@babel/preset-typescript\"],\n            // 缓存编译目录\n            cacheDirectory: true\n          }\n        }\n      ]\n    },\n    {\n      // 处理样式\n      test: /\\.css$/,\n      // 执行的顺序 less-loader => css-loader => style-loader\n      // ExractTextPlugin 提取css到单独文件,同时配置参数\n      // plugins: [\n  \t\t//   new ExtractTextPlugin({\n      //     filename:  (getPath) => {\n      //       return getPath('css/[name].css').replace('css/js', 'css');\n      //   \t },\n      //     allChunks: true\n      //   })\n      // ]\n      use: ExractTextPlugin.extract({\n        fallback: 'style-loader',\n        use: [\n          {\n            // 解析css\n            loader: 'css-loader',\n            options: {\n              // 开启css模块化\n              modules: true\n            }\n          },\n          'postcss-loader',\n          {\n            // 将less转换为css\n            loader: 'less-loader',\n            options: {\n              xxx: xxx\n            }\n          }\n        ]\n      })\n    },\n    {\n      // 处理图片\n      test: /\\.(png|svg|jpg|gif)$/,\n      use: [\n        'file-loader'\n      ]\n    },\n    {\n      // 处理字体文件\n      test: /\\.(woff|woff2|eot|ttf|otf)$/,\n      use: [\n        'file-loader'\n      ]\n    }\n  ]\n}\n```\n\n- plugins: 扩展webpack打包能力\n\n```js\n// 常用的插件\nplugins: [\n  // 打包自动生成 html 入口文件\n  new HtmlWebpackPlugin({ title: 'output page' }),\n  // 清理打包之后的目录\n  new CleanWebpackPlugin(['dist']),\n  // 定义环境变量\n  new webpack.DefinePlugin({\n    'process.env.NODE_ENV': JSON.stringify('development')\n  }),\n  // 压缩代码\n  new UglifyJSPlugin()\n]\n```\n\n### 开发相关\n\n- mode: 打包模式，用于webpack内部，外界只需要传`development | production`\n- devtool: 配置`source map`\n\n> source map的作用是将编译后的代码映射回原始源代码\n\n- devserver: 配置`webpack-dev-server`，官方提供的开发服务器\n  - hot: `true | false` 是否启动热加载\n  - proxy: 解决跨域\n\n> 热加载的作用是局部更新代码，如果我们没有使用框架，则需要自己实现热加载逻辑\n\n- resolver: 解决文件识别问题\n  - extensions: `['js', 'jsx']` 自动识别文件后缀，引入时可不加后缀\n  - alias: `{ 'src': path.resolve(__dirname, \"src/\") }` 路径别名\n\n### 优化相关\n\n- 分析工具\n  - [webpack-chart](https://alexkuz.github.io/webpack-chart/): webpack 数据交互饼图\n  - [webpack-visualizer](https://chrisbateman.github.io/webpack-visualizer/): 可视化并分析你的 bundle，检查哪些模块占用空间，哪些可能是重复使用的\n  - [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer): 一款分析 bundle 内容的插件及 CLI 工具，以便捷的、交互式、可缩放的树状图形式展现给用户\n\n- `mode: production`，默认开始`tree shaking`\n\n> tree shaking的作用打包中剔除没有使用过的代码\n\n- 动态加载/懒加载：采用ES6`import`语法，`import('path/to/module') -> Promise`，不会影响总打包的大小，提升代码执行速度\n- 浏览器缓存\n\n```js\nentry: {\n  main: './src/index.js',\n  vendor: ['lodash', 'react']\n}\nplugins: [\n  // 确保hash值代表一个bundle\n  new webpack.HashedModuleIdsPlugin(),\n  // 抽取第三方模块\n  new webpack.optimize.CommonsChunkPlugin({\n     name: 'vendor'\n  }),\n  // 抽取webpack执行上下文\n  new webpack.optimize.CommonsChunkPlugin({\n     name: 'manifest'\n  })\n]\n```\n\n- webpack深度优化\n\n```js\noptimization: {\n    minimizer: [\n      new TerserWebpackPlugin({\n        terserOptions: {\n          warnings: false,\n          compress: {\n            warnings: false,\n            // 是否注释掉console\n            drop_console: false,\n            dead_code: true,\n            drop_debugger: true,\n          },\n          output: {\n            comments: false,\n            beautify: false,\n          },\n          // 混淆\n          mangle: true,\n        },\n        // 多线程打包\n        parallel: true,\n        // 是否开启source map\n        sourceMap: false,\n      })\n    ],\n    splitChunks: {\n      cacheGroups: {\n        commons: {\n          name: 'commons',\n          chunks: 'initial',\n          minChunks: 3,\n          enforce: true\n        }\n      }\n    }\n  }\n```\n\n### 环境隔离\n\n一般使用`webpack-merge`第三库，合并配置并输出\n\n```js\nconst webpackMerge = require('webpack-merge')\n\nconst baseWebpackConfig = require('./webpack.config.base')\n\nconst webpackConfig = webpackMerge(baseWebpackConfig, {\n  mode: 'development',\n  devtool: 'eval-source-map',\n  stats: { children: false }\n})\n\nmodule.exports = webpackConfig\n```\n\n### 流行脚手架特性\n\n- 具备开发服务器 [webpack-dev-server](https://github.com/webpack/webpack-dev-server)\n- 打包HTML，CSS，JS，图片，字体文件\n- 整合Eslint（检查代码风格），Typescript（静态编译检查），Babel（语法降级，优化编译）\n- 生产构建优化\n- 开发环境打包速度优化\n\n\n\n\n\n","source":"_posts/webpack.md","raw":"---\nlayout:     post\ntitle:      \"基于Webpack项目工程化\"\nsubtitle:   \"又是一波整合的配置\"\ndate:       2021-01-11 18:47:00\nauthor:     \"Long\"\nheader-img: \"post-bg.jpg\"\ntags:\n    - 项目工程化\n---\n\n## Webpack\n\n> webpack是一个打包工具，可以打包一切前端相关资源\n\n学习webpack，掌握3个要素\n\n- 理解打包过程\n- 熟悉打包配置\n- 了解webpack生态\n\n比较其他的打包工具👇\n\n[rollup](https://rollupjs.org/guide/en/)：一般用打包JS库，打包单纯的JS用的比较多，打包其他资源需要借助插件\n\n[parcel](https://parceljs.org/)：0配置打包工具\n\n[gulp](https://gulpjs.com/)：基于流的打包工具，逐渐被替代\n\n### 概念\n\n核心配置：\n\n- entry: 打包入口\n- output: 打包输出目录\n\n```js\noutput: {\n  filename: '[name].bundle.[chunkhash].[ext]',\n  // 绝对路径  \n  path: path.resolve(__dirname, 'dist'),\n  // 配置动态加载\n  chunkFilename: '[name].bundle.js'\n}\n```\n\n- module(Loader): 处理各种资源\n\n```js\nmodule: {\n  rules: [\n    {\n      test: /\\.jsx$/,\n      use: [\n        {\n          loader: 'babel-loader',\n          options: {\n            // 支持解析jsx以及tsx\n            presets: [\"@babel/preset-react\", \"@babel/preset-typescript\"],\n            // 缓存编译目录\n            cacheDirectory: true\n          }\n        }\n      ]\n    },\n    {\n      // 处理样式\n      test: /\\.css$/,\n      // 执行的顺序 less-loader => css-loader => style-loader\n      // ExractTextPlugin 提取css到单独文件,同时配置参数\n      // plugins: [\n  \t\t//   new ExtractTextPlugin({\n      //     filename:  (getPath) => {\n      //       return getPath('css/[name].css').replace('css/js', 'css');\n      //   \t },\n      //     allChunks: true\n      //   })\n      // ]\n      use: ExractTextPlugin.extract({\n        fallback: 'style-loader',\n        use: [\n          {\n            // 解析css\n            loader: 'css-loader',\n            options: {\n              // 开启css模块化\n              modules: true\n            }\n          },\n          'postcss-loader',\n          {\n            // 将less转换为css\n            loader: 'less-loader',\n            options: {\n              xxx: xxx\n            }\n          }\n        ]\n      })\n    },\n    {\n      // 处理图片\n      test: /\\.(png|svg|jpg|gif)$/,\n      use: [\n        'file-loader'\n      ]\n    },\n    {\n      // 处理字体文件\n      test: /\\.(woff|woff2|eot|ttf|otf)$/,\n      use: [\n        'file-loader'\n      ]\n    }\n  ]\n}\n```\n\n- plugins: 扩展webpack打包能力\n\n```js\n// 常用的插件\nplugins: [\n  // 打包自动生成 html 入口文件\n  new HtmlWebpackPlugin({ title: 'output page' }),\n  // 清理打包之后的目录\n  new CleanWebpackPlugin(['dist']),\n  // 定义环境变量\n  new webpack.DefinePlugin({\n    'process.env.NODE_ENV': JSON.stringify('development')\n  }),\n  // 压缩代码\n  new UglifyJSPlugin()\n]\n```\n\n### 开发相关\n\n- mode: 打包模式，用于webpack内部，外界只需要传`development | production`\n- devtool: 配置`source map`\n\n> source map的作用是将编译后的代码映射回原始源代码\n\n- devserver: 配置`webpack-dev-server`，官方提供的开发服务器\n  - hot: `true | false` 是否启动热加载\n  - proxy: 解决跨域\n\n> 热加载的作用是局部更新代码，如果我们没有使用框架，则需要自己实现热加载逻辑\n\n- resolver: 解决文件识别问题\n  - extensions: `['js', 'jsx']` 自动识别文件后缀，引入时可不加后缀\n  - alias: `{ 'src': path.resolve(__dirname, \"src/\") }` 路径别名\n\n### 优化相关\n\n- 分析工具\n  - [webpack-chart](https://alexkuz.github.io/webpack-chart/): webpack 数据交互饼图\n  - [webpack-visualizer](https://chrisbateman.github.io/webpack-visualizer/): 可视化并分析你的 bundle，检查哪些模块占用空间，哪些可能是重复使用的\n  - [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer): 一款分析 bundle 内容的插件及 CLI 工具，以便捷的、交互式、可缩放的树状图形式展现给用户\n\n- `mode: production`，默认开始`tree shaking`\n\n> tree shaking的作用打包中剔除没有使用过的代码\n\n- 动态加载/懒加载：采用ES6`import`语法，`import('path/to/module') -> Promise`，不会影响总打包的大小，提升代码执行速度\n- 浏览器缓存\n\n```js\nentry: {\n  main: './src/index.js',\n  vendor: ['lodash', 'react']\n}\nplugins: [\n  // 确保hash值代表一个bundle\n  new webpack.HashedModuleIdsPlugin(),\n  // 抽取第三方模块\n  new webpack.optimize.CommonsChunkPlugin({\n     name: 'vendor'\n  }),\n  // 抽取webpack执行上下文\n  new webpack.optimize.CommonsChunkPlugin({\n     name: 'manifest'\n  })\n]\n```\n\n- webpack深度优化\n\n```js\noptimization: {\n    minimizer: [\n      new TerserWebpackPlugin({\n        terserOptions: {\n          warnings: false,\n          compress: {\n            warnings: false,\n            // 是否注释掉console\n            drop_console: false,\n            dead_code: true,\n            drop_debugger: true,\n          },\n          output: {\n            comments: false,\n            beautify: false,\n          },\n          // 混淆\n          mangle: true,\n        },\n        // 多线程打包\n        parallel: true,\n        // 是否开启source map\n        sourceMap: false,\n      })\n    ],\n    splitChunks: {\n      cacheGroups: {\n        commons: {\n          name: 'commons',\n          chunks: 'initial',\n          minChunks: 3,\n          enforce: true\n        }\n      }\n    }\n  }\n```\n\n### 环境隔离\n\n一般使用`webpack-merge`第三库，合并配置并输出\n\n```js\nconst webpackMerge = require('webpack-merge')\n\nconst baseWebpackConfig = require('./webpack.config.base')\n\nconst webpackConfig = webpackMerge(baseWebpackConfig, {\n  mode: 'development',\n  devtool: 'eval-source-map',\n  stats: { children: false }\n})\n\nmodule.exports = webpackConfig\n```\n\n### 流行脚手架特性\n\n- 具备开发服务器 [webpack-dev-server](https://github.com/webpack/webpack-dev-server)\n- 打包HTML，CSS，JS，图片，字体文件\n- 整合Eslint（检查代码风格），Typescript（静态编译检查），Babel（语法降级，优化编译）\n- 生产构建优化\n- 开发环境打包速度优化\n\n\n\n\n\n","slug":"webpack","published":1,"updated":"2021-01-11T10:50:57.001Z","_id":"ckjsg0ae20000qn0oeb98fiqo","comments":1,"photos":[],"link":"","content":"<h2 id=\"Webpack\"><a href=\"#Webpack\" class=\"headerlink\" title=\"Webpack\"></a>Webpack</h2><blockquote>\n<p>webpack是一个打包工具，可以打包一切前端相关资源</p>\n</blockquote>\n<p>学习webpack，掌握3个要素</p>\n<ul>\n<li>理解打包过程</li>\n<li>熟悉打包配置</li>\n<li>了解webpack生态</li>\n</ul>\n<p>比较其他的打包工具👇</p>\n<p><a href=\"https://rollupjs.org/guide/en/\">rollup</a>：一般用打包JS库，打包单纯的JS用的比较多，打包其他资源需要借助插件</p>\n<p><a href=\"https://parceljs.org/\">parcel</a>：0配置打包工具</p>\n<p><a href=\"https://gulpjs.com/\">gulp</a>：基于流的打包工具，逐渐被替代</p>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>核心配置：</p>\n<ul>\n<li>entry: 打包入口</li>\n<li>output: 打包输出目录</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output: &#123;</span><br><span class=\"line\">  filename: <span class=\"string\">&#x27;[name].bundle.[chunkhash].[ext]&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 绝对路径  </span></span><br><span class=\"line\">  path: path.resolve(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">  <span class=\"comment\">// 配置动态加载</span></span><br><span class=\"line\">  chunkFilename: <span class=\"string\">&#x27;[name].bundle.js&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>module(Loader): 处理各种资源</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">  rules: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.jsx$/</span>,</span><br><span class=\"line\">      use: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 支持解析jsx以及tsx</span></span><br><span class=\"line\">            presets: [<span class=\"string\">&quot;@babel/preset-react&quot;</span>, <span class=\"string\">&quot;@babel/preset-typescript&quot;</span>],</span><br><span class=\"line\">            <span class=\"comment\">// 缓存编译目录</span></span><br><span class=\"line\">            cacheDirectory: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 处理样式</span></span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 执行的顺序 less-loader =&gt; css-loader =&gt; style-loader</span></span><br><span class=\"line\">      <span class=\"comment\">// ExractTextPlugin 提取css到单独文件,同时配置参数</span></span><br><span class=\"line\">      <span class=\"comment\">// plugins: [</span></span><br><span class=\"line\">  \t\t<span class=\"comment\">//   new ExtractTextPlugin(&#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//     filename:  (getPath) =&gt; &#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//       return getPath(&#x27;css/[name].css&#x27;).replace(&#x27;css/js&#x27;, &#x27;css&#x27;);</span></span><br><span class=\"line\">      <span class=\"comment\">//   \t &#125;,</span></span><br><span class=\"line\">      <span class=\"comment\">//     allChunks: true</span></span><br><span class=\"line\">      <span class=\"comment\">//   &#125;)</span></span><br><span class=\"line\">      <span class=\"comment\">// ]</span></span><br><span class=\"line\">      use: ExractTextPlugin.extract(&#123;</span><br><span class=\"line\">        fallback: <span class=\"string\">&#x27;style-loader&#x27;</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 解析css</span></span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 开启css模块化</span></span><br><span class=\"line\">              modules: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;postcss-loader&#x27;</span>,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 将less转换为css</span></span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;less-loader&#x27;</span>,</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">              xxx: xxx</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 处理图片</span></span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.(png|svg|jpg|gif)$/</span>,</span><br><span class=\"line\">      use: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;file-loader&#x27;</span></span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 处理字体文件</span></span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.(woff|woff2|eot|ttf|otf)$/</span>,</span><br><span class=\"line\">      use: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;file-loader&#x27;</span></span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>plugins: 扩展webpack打包能力</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 常用的插件</span></span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"comment\">// 打包自动生成 html 入口文件</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123; <span class=\"attr\">title</span>: <span class=\"string\">&#x27;output page&#x27;</span> &#125;),</span><br><span class=\"line\">  <span class=\"comment\">// 清理打包之后的目录</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> CleanWebpackPlugin([<span class=\"string\">&#x27;dist&#x27;</span>]),</span><br><span class=\"line\">  <span class=\"comment\">// 定义环境变量</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;process.env.NODE_ENV&#x27;</span>: <span class=\"built_in\">JSON</span>.stringify(<span class=\"string\">&#x27;development&#x27;</span>)</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  <span class=\"comment\">// 压缩代码</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> UglifyJSPlugin()</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"开发相关\"><a href=\"#开发相关\" class=\"headerlink\" title=\"开发相关\"></a>开发相关</h3><ul>\n<li>mode: 打包模式，用于webpack内部，外界只需要传<code>development | production</code></li>\n<li>devtool: 配置<code>source map</code></li>\n</ul>\n<blockquote>\n<p>source map的作用是将编译后的代码映射回原始源代码</p>\n</blockquote>\n<ul>\n<li>devserver: 配置<code>webpack-dev-server</code>，官方提供的开发服务器<ul>\n<li>hot: <code>true | false</code> 是否启动热加载</li>\n<li>proxy: 解决跨域</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>热加载的作用是局部更新代码，如果我们没有使用框架，则需要自己实现热加载逻辑</p>\n</blockquote>\n<ul>\n<li>resolver: 解决文件识别问题<ul>\n<li>extensions: <code>[&#39;js&#39;, &#39;jsx&#39;]</code> 自动识别文件后缀，引入时可不加后缀</li>\n<li>alias: <code>&#123; &#39;src&#39;: path.resolve(__dirname, &quot;src/&quot;) &#125;</code> 路径别名</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"优化相关\"><a href=\"#优化相关\" class=\"headerlink\" title=\"优化相关\"></a>优化相关</h3><ul>\n<li><p>分析工具</p>\n<ul>\n<li><a href=\"https://alexkuz.github.io/webpack-chart/\">webpack-chart</a>: webpack 数据交互饼图</li>\n<li><a href=\"https://chrisbateman.github.io/webpack-visualizer/\">webpack-visualizer</a>: 可视化并分析你的 bundle，检查哪些模块占用空间，哪些可能是重复使用的</li>\n<li><a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\">webpack-bundle-analyzer</a>: 一款分析 bundle 内容的插件及 CLI 工具，以便捷的、交互式、可缩放的树状图形式展现给用户</li>\n</ul>\n</li>\n<li><p><code>mode: production</code>，默认开始<code>tree shaking</code></p>\n</li>\n</ul>\n<blockquote>\n<p>tree shaking的作用打包中剔除没有使用过的代码</p>\n</blockquote>\n<ul>\n<li>动态加载/懒加载：采用ES6<code>import</code>语法，<code>import(&#39;path/to/module&#39;) -&gt; Promise</code>，不会影响总打包的大小，提升代码执行速度</li>\n<li>浏览器缓存</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry: &#123;</span><br><span class=\"line\">  main: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">  vendor: [<span class=\"string\">&#x27;lodash&#x27;</span>, <span class=\"string\">&#x27;react&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"comment\">// 确保hash值代表一个bundle</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(),</span><br><span class=\"line\">  <span class=\"comment\">// 抽取第三方模块</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">     name: <span class=\"string\">&#x27;vendor&#x27;</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  <span class=\"comment\">// 抽取webpack执行上下文</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">     name: <span class=\"string\">&#x27;manifest&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>webpack深度优化</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">    minimizer: [</span><br><span class=\"line\">      <span class=\"keyword\">new</span> TerserWebpackPlugin(&#123;</span><br><span class=\"line\">        terserOptions: &#123;</span><br><span class=\"line\">          warnings: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 是否注释掉console</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            dead_code: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          output: &#123;</span><br><span class=\"line\">            comments: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            beautify: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"comment\">// 混淆</span></span><br><span class=\"line\">          mangle: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">// 多线程打包</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 是否开启source map</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    splitChunks: &#123;</span><br><span class=\"line\">      cacheGroups: &#123;</span><br><span class=\"line\">        commons: &#123;</span><br><span class=\"line\">          name: <span class=\"string\">&#x27;commons&#x27;</span>,</span><br><span class=\"line\">          chunks: <span class=\"string\">&#x27;initial&#x27;</span>,</span><br><span class=\"line\">          minChunks: <span class=\"number\">3</span>,</span><br><span class=\"line\">          enforce: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"环境隔离\"><a href=\"#环境隔离\" class=\"headerlink\" title=\"环境隔离\"></a>环境隔离</h3><p>一般使用<code>webpack-merge</code>第三库，合并配置并输出</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> webpackMerge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.config.base&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = webpackMerge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">  devtool: <span class=\"string\">&#x27;eval-source-map&#x27;</span>,</span><br><span class=\"line\">  stats: &#123; <span class=\"attr\">children</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<h3 id=\"流行脚手架特性\"><a href=\"#流行脚手架特性\" class=\"headerlink\" title=\"流行脚手架特性\"></a>流行脚手架特性</h3><ul>\n<li>具备开发服务器 <a href=\"https://github.com/webpack/webpack-dev-server\">webpack-dev-server</a></li>\n<li>打包HTML，CSS，JS，图片，字体文件</li>\n<li>整合Eslint（检查代码风格），Typescript（静态编译检查），Babel（语法降级，优化编译）</li>\n<li>生产构建优化</li>\n<li>开发环境打包速度优化</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Webpack\"><a href=\"#Webpack\" class=\"headerlink\" title=\"Webpack\"></a>Webpack</h2><blockquote>\n<p>webpack是一个打包工具，可以打包一切前端相关资源</p>\n</blockquote>\n<p>学习webpack，掌握3个要素</p>\n<ul>\n<li>理解打包过程</li>\n<li>熟悉打包配置</li>\n<li>了解webpack生态</li>\n</ul>\n<p>比较其他的打包工具👇</p>\n<p><a href=\"https://rollupjs.org/guide/en/\">rollup</a>：一般用打包JS库，打包单纯的JS用的比较多，打包其他资源需要借助插件</p>\n<p><a href=\"https://parceljs.org/\">parcel</a>：0配置打包工具</p>\n<p><a href=\"https://gulpjs.com/\">gulp</a>：基于流的打包工具，逐渐被替代</p>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>核心配置：</p>\n<ul>\n<li>entry: 打包入口</li>\n<li>output: 打包输出目录</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output: &#123;</span><br><span class=\"line\">  filename: <span class=\"string\">&#x27;[name].bundle.[chunkhash].[ext]&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 绝对路径  </span></span><br><span class=\"line\">  path: path.resolve(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">  <span class=\"comment\">// 配置动态加载</span></span><br><span class=\"line\">  chunkFilename: <span class=\"string\">&#x27;[name].bundle.js&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>module(Loader): 处理各种资源</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">  rules: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.jsx$/</span>,</span><br><span class=\"line\">      use: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 支持解析jsx以及tsx</span></span><br><span class=\"line\">            presets: [<span class=\"string\">&quot;@babel/preset-react&quot;</span>, <span class=\"string\">&quot;@babel/preset-typescript&quot;</span>],</span><br><span class=\"line\">            <span class=\"comment\">// 缓存编译目录</span></span><br><span class=\"line\">            cacheDirectory: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 处理样式</span></span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 执行的顺序 less-loader =&gt; css-loader =&gt; style-loader</span></span><br><span class=\"line\">      <span class=\"comment\">// ExractTextPlugin 提取css到单独文件,同时配置参数</span></span><br><span class=\"line\">      <span class=\"comment\">// plugins: [</span></span><br><span class=\"line\">  \t\t<span class=\"comment\">//   new ExtractTextPlugin(&#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//     filename:  (getPath) =&gt; &#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//       return getPath(&#x27;css/[name].css&#x27;).replace(&#x27;css/js&#x27;, &#x27;css&#x27;);</span></span><br><span class=\"line\">      <span class=\"comment\">//   \t &#125;,</span></span><br><span class=\"line\">      <span class=\"comment\">//     allChunks: true</span></span><br><span class=\"line\">      <span class=\"comment\">//   &#125;)</span></span><br><span class=\"line\">      <span class=\"comment\">// ]</span></span><br><span class=\"line\">      use: ExractTextPlugin.extract(&#123;</span><br><span class=\"line\">        fallback: <span class=\"string\">&#x27;style-loader&#x27;</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 解析css</span></span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 开启css模块化</span></span><br><span class=\"line\">              modules: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;postcss-loader&#x27;</span>,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 将less转换为css</span></span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;less-loader&#x27;</span>,</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">              xxx: xxx</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 处理图片</span></span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.(png|svg|jpg|gif)$/</span>,</span><br><span class=\"line\">      use: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;file-loader&#x27;</span></span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 处理字体文件</span></span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.(woff|woff2|eot|ttf|otf)$/</span>,</span><br><span class=\"line\">      use: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;file-loader&#x27;</span></span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>plugins: 扩展webpack打包能力</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 常用的插件</span></span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"comment\">// 打包自动生成 html 入口文件</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123; <span class=\"attr\">title</span>: <span class=\"string\">&#x27;output page&#x27;</span> &#125;),</span><br><span class=\"line\">  <span class=\"comment\">// 清理打包之后的目录</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> CleanWebpackPlugin([<span class=\"string\">&#x27;dist&#x27;</span>]),</span><br><span class=\"line\">  <span class=\"comment\">// 定义环境变量</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;process.env.NODE_ENV&#x27;</span>: <span class=\"built_in\">JSON</span>.stringify(<span class=\"string\">&#x27;development&#x27;</span>)</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  <span class=\"comment\">// 压缩代码</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> UglifyJSPlugin()</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"开发相关\"><a href=\"#开发相关\" class=\"headerlink\" title=\"开发相关\"></a>开发相关</h3><ul>\n<li>mode: 打包模式，用于webpack内部，外界只需要传<code>development | production</code></li>\n<li>devtool: 配置<code>source map</code></li>\n</ul>\n<blockquote>\n<p>source map的作用是将编译后的代码映射回原始源代码</p>\n</blockquote>\n<ul>\n<li>devserver: 配置<code>webpack-dev-server</code>，官方提供的开发服务器<ul>\n<li>hot: <code>true | false</code> 是否启动热加载</li>\n<li>proxy: 解决跨域</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>热加载的作用是局部更新代码，如果我们没有使用框架，则需要自己实现热加载逻辑</p>\n</blockquote>\n<ul>\n<li>resolver: 解决文件识别问题<ul>\n<li>extensions: <code>[&#39;js&#39;, &#39;jsx&#39;]</code> 自动识别文件后缀，引入时可不加后缀</li>\n<li>alias: <code>&#123; &#39;src&#39;: path.resolve(__dirname, &quot;src/&quot;) &#125;</code> 路径别名</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"优化相关\"><a href=\"#优化相关\" class=\"headerlink\" title=\"优化相关\"></a>优化相关</h3><ul>\n<li><p>分析工具</p>\n<ul>\n<li><a href=\"https://alexkuz.github.io/webpack-chart/\">webpack-chart</a>: webpack 数据交互饼图</li>\n<li><a href=\"https://chrisbateman.github.io/webpack-visualizer/\">webpack-visualizer</a>: 可视化并分析你的 bundle，检查哪些模块占用空间，哪些可能是重复使用的</li>\n<li><a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\">webpack-bundle-analyzer</a>: 一款分析 bundle 内容的插件及 CLI 工具，以便捷的、交互式、可缩放的树状图形式展现给用户</li>\n</ul>\n</li>\n<li><p><code>mode: production</code>，默认开始<code>tree shaking</code></p>\n</li>\n</ul>\n<blockquote>\n<p>tree shaking的作用打包中剔除没有使用过的代码</p>\n</blockquote>\n<ul>\n<li>动态加载/懒加载：采用ES6<code>import</code>语法，<code>import(&#39;path/to/module&#39;) -&gt; Promise</code>，不会影响总打包的大小，提升代码执行速度</li>\n<li>浏览器缓存</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry: &#123;</span><br><span class=\"line\">  main: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">  vendor: [<span class=\"string\">&#x27;lodash&#x27;</span>, <span class=\"string\">&#x27;react&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"comment\">// 确保hash值代表一个bundle</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(),</span><br><span class=\"line\">  <span class=\"comment\">// 抽取第三方模块</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">     name: <span class=\"string\">&#x27;vendor&#x27;</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  <span class=\"comment\">// 抽取webpack执行上下文</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">     name: <span class=\"string\">&#x27;manifest&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>webpack深度优化</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">    minimizer: [</span><br><span class=\"line\">      <span class=\"keyword\">new</span> TerserWebpackPlugin(&#123;</span><br><span class=\"line\">        terserOptions: &#123;</span><br><span class=\"line\">          warnings: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 是否注释掉console</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            dead_code: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          output: &#123;</span><br><span class=\"line\">            comments: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            beautify: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"comment\">// 混淆</span></span><br><span class=\"line\">          mangle: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">// 多线程打包</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 是否开启source map</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    splitChunks: &#123;</span><br><span class=\"line\">      cacheGroups: &#123;</span><br><span class=\"line\">        commons: &#123;</span><br><span class=\"line\">          name: <span class=\"string\">&#x27;commons&#x27;</span>,</span><br><span class=\"line\">          chunks: <span class=\"string\">&#x27;initial&#x27;</span>,</span><br><span class=\"line\">          minChunks: <span class=\"number\">3</span>,</span><br><span class=\"line\">          enforce: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"环境隔离\"><a href=\"#环境隔离\" class=\"headerlink\" title=\"环境隔离\"></a>环境隔离</h3><p>一般使用<code>webpack-merge</code>第三库，合并配置并输出</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> webpackMerge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.config.base&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = webpackMerge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">  devtool: <span class=\"string\">&#x27;eval-source-map&#x27;</span>,</span><br><span class=\"line\">  stats: &#123; <span class=\"attr\">children</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<h3 id=\"流行脚手架特性\"><a href=\"#流行脚手架特性\" class=\"headerlink\" title=\"流行脚手架特性\"></a>流行脚手架特性</h3><ul>\n<li>具备开发服务器 <a href=\"https://github.com/webpack/webpack-dev-server\">webpack-dev-server</a></li>\n<li>打包HTML，CSS，JS，图片，字体文件</li>\n<li>整合Eslint（检查代码风格），Typescript（静态编译检查），Babel（语法降级，优化编译）</li>\n<li>生产构建优化</li>\n<li>开发环境打包速度优化</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/hello-bolg/post-bg.jpg","slug":"post-bg.jpg","post":"ckjqzmek90000s80oh4v3c8ui","modified":0,"renderable":0},{"_id":"source/_posts/webpack/post-bg.jpg","slug":"post-bg.jpg","post":"ckjsg0ae20000qn0oeb98fiqo","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"ckjqzmek90000s80oh4v3c8ui","tag_id":"ckjr72fh70000ez0odvat2k7i","_id":"ckjr72fh90001ez0o83pp4uiu"},{"post_id":"ckjsg0ae20000qn0oeb98fiqo","tag_id":"ckjsg0ae70001qn0occie7re3","_id":"ckjsg0ae80002qn0o58qpa93o"}],"Tag":[{"name":"生活","_id":"ckjqxs5u70005f30ovn1qzd8t"},{"name":"前端开发","_id":"ckjqxs5ud000af30ohmdfbc54"},{"name":"JavaScript","_id":"ckjqxs5uh000cf30olj4suqcu"},{"name":"翻译","_id":"ckjqxs5uj000lf30osfdc8udo"},{"name":"OS","_id":"ckjqxs5uk000mf30ouxkmq6i4"},{"name":"Unix","_id":"ckjqxs5uk000pf30o6b1abi42"},{"name":"Linux","_id":"ckjqxs5uk000rf30ozxjsrqtk"},{"name":"计划","_id":"ckjr72fh70000ez0odvat2k7i"},{"name":"项目工程化","_id":"ckjsg0ae70001qn0occie7re3"}]}}